# .github/workflows/ci.yml

name: Continuous Integration

on:
  push:
    branches: [ main, 'release/**' ]
  pull_request:
    branches: [ main, 'release/**' ]

jobs:
  lint:
    name: Code Style (PHPCS)
    runs-on: ubuntu-latest
    steps:
      # Step 1: Get the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required to accurately diff against the base branch

      # Step 2: Set up the PHP environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          tools: composer
          coverage: none

      # Step 3: Install all PHP dependencies (which includes phpcs)
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      # Step 4: Run the linter ONLY on changed files for pull requests
      - name: Run PHPCS on changed files (Pull Request)
        if: github.event_name == 'pull_request'
        run: |
          # Get a list of changed PHP files
          CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} -- '*.php' || echo '')

          if [[ -n "$CHANGED_FILES" ]]; then
            # Generate the checkstyle report and save it to a file.
            # The `|| true` ensures that this step succeeds even if phpcs finds errors,
            # allowing the next step to report them.
            echo "$CHANGED_FILES" | xargs ./vendor/bin/phpcs --report=checkstyle --no-cache > phpcs-report.xml || true
          else
            echo "No PHP files changed. Skipping PHPCS."
            # Create an empty report if no files changed so the next step doesn't fail
            echo '<checkstyle/>' > phpcs-report.xml
          fi

      # Step 5: Use the dedicated GitHub Action to create annotations from the report file
      - name: Create annotations from PHPCS report (Pull Request)
        if: github.event_name == 'pull_request'
        uses: staabm/annotate-pull-request-from-checkstyle-action@v1
        with:
          # Tell the action where to find the report file we just created
          files: phpcs-report.xml
          notices-as-warnings: true

      # Step 6: For pushes to main, run a full scan as a final safety check
      - name: Run PHPCS full scan (Push)
        if: github.event_name != 'pull_request'
        run: ./vendor/bin/phpcs --no-cache

  static-analysis:
    name: Static Analysis (PHPStan)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          # It's a best practice to run static analysis on the highest supported PHP version
          php-version: 8.4
          tools: composer
          coverage: none

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse --no-progress --error-format=github

  unit-tests:
    # Give the job a more descriptive name in the GitHub UI
    name: Unit Tests (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: [ 8.0, 8.1, 8.2, 8.3, 8.4 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer
          coverage: none # Coverage is a separate job, so disable drivers here

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Run PHPUnit
        run: ./vendor/bin/phpunit